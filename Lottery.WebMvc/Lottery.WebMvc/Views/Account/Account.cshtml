@using Lottery.DoMain.Enum;
@using Lottery.DoMain.Constant;
@using Lottery.DoMain.Models;
@using Newtonsoft.Json;
@using Lottery.DoMain.Extentions;
@using Lottery.Service.ServiceProvider;
@using Lottery.Service.ServiceProvider.Interface;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    FormsIdentity id = (FormsIdentity)HttpContext.Current.User.Identity;
    FormsAuthenticationTicket ticket = id.Ticket;
    var userData = JsonConvert.DeserializeObject<User>(ticket.UserData);
}

<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Typescript UI Controls">
<meta name="author" content="Syncfusion">
<link href="~/assets/css/account.css" rel="stylesheet" />
<html>
<head>
    <style>
       
    </style>
</head>
<body>
    @Html.AntiForgeryToken()
    <div class="container">
        <div class="heading">
            <h3>Thông tin tài khoản</h3>
            <button onclick="goToBackCaculation()" style="background: #e3165b !important;" class="btn-core-accept">
                <i style="margin-right:5px;" class="fa fa-chevron-circle-left"></i>
                Trang tính
            </button>
        </div>

        <div class="div-form-account">
            <div class="icon-account">
                <i class="fas fa-user-circle"></i>
            </div>
            <div class="form-account">
                <div class="row">
                    <input type="text" tabindex="1" id="user_name">
                </div>
                <div class="row">
                    <input type="text" tabindex="1" id="number_phone">
                </div>
                <div class="row">
                    <input type="number" step="any" tabindex="1" id="tile_xac">
                </div>
                <div class="row">
                    <input type="number" tabindex="1" id="tile_thuong">
                </div>
                <div class="row">
                    <input type="number" tabindex="1" id="tile_dathang">
                </div>
                <div class="row">
                    <input type="number" tabindex="1" id="tile_daXien">
                </div>
                <div class="row">
                    <input type="number" tabindex="1" id="tile_baSo">
                </div>
                <div class="row">
                    <input type="number" tabindex="1" id="tile_bonSo">
                </div>
                <div class="row button">
                    <button onclick="executeUpdateAccount()">Cập nhật</button>
                </div>
            </div>
        </div>
        
    </div>
    <script>

        var userData = @Html.Raw(Json.Encode(userData));
        $(document).ready(function () {

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Tên tài khoản',
                floatLabelType: 'Auto',
                value: userData.UserName,

            });
            inputobj.appendTo('#user_name');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Số điện thoại',
                floatLabelType: 'Auto',
                value: (@userData.PhoneNumber),
            });
            inputobj.appendTo('#number_phone');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Tỷ lệ xác',
                floatLabelType: 'Auto',
                value: (@userData.TileXac),
            });
            inputobj.appendTo('#tile_xac');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Tỷ lệ thưởng',
                floatLabelType: 'Auto',
                value: (@userData.TileThuong),
            });
            inputobj.appendTo('#tile_thuong');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Đá thẳng',
                floatLabelType: 'Auto',
                value: (@userData.DaThang),
            });
            inputobj.appendTo('#tile_dathang');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Đá xiên',
                floatLabelType: 'Auto',
                value: (@userData.DaXien),
            });
            inputobj.appendTo('#tile_daXien');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Ba số',
                floatLabelType: 'Auto',
                value: (@userData.TileBaSo),
            });
            inputobj.appendTo('#tile_baSo');

            var inputobj = new ej.inputs.TextBox({
                placeholder: 'Bốn số',
                floatLabelType: 'Auto',
                value: (@userData.BonSo),
            });
            inputobj.appendTo('#tile_bonSo');

        });

        function goToBackCaculation() {
            window.location = "/Calculation/IndexImport"
        }

        function executeUpdateAccount() {
            var accountModel = {
                userID: userData.Id,
                userName: document.getElementById("user_name").ej2_instances[0].value,
                phoneNumber: document.getElementById("number_phone").ej2_instances[0].value,
                tileXac: document.getElementById("tile_xac").ej2_instances[0].value,
                tileThuong: document.getElementById("tile_thuong").ej2_instances[0].value,
                tileBaSo: document.getElementById("tile_dathang").ej2_instances[0].value,
                daThang: document.getElementById("tile_daXien").ej2_instances[0].value,
                daXien: document.getElementById("tile_baSo").ej2_instances[0].value,
                bonSo: document.getElementById("tile_bonSo").ej2_instances[0].value,
            }
            ShowOverlay(true);
            accountJson = JSON.stringify(accountModel);
            $.ajax({
                    type: "POST",
                    data:
                    {
                        "accountJson": accountJson,
                    },
                    url: "@Url.Action("ExecuteUpdateAccount", "Account")",
                    success: function (data)
                    {
                        if (data.Success && data.Data) {
                            awesomeAlert({
                                header: true,
                                type: 'success',
                                title: 'Thành công!',
                                message: 'Cập nhật thành công.',
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/success.svg',
                                buttonOK: 'Xong!',
                                closeStyle: 'circle'
                            }).then(res => location.reload())
                        }
                        else {
                            var message = "Đã có lỗi xảy ra."
                            if (!isNullOrEmpty(data.Message)) {
                                message = data.Message;
                            }
                            awesomeAlert({
                                header: true,
                                type: 'error',
                                title: 'Có lỗi!',
                                message: message,
                                //bgColor: '#2dd284',
                                img: '/assets/images/icon/error.svg',
                                buttonOK: 'Oke!',
                                closeStyle: 'circle'
                            }).then(res => false)
                        }
                        hideOverlay();
                    },
                })
        }

    </script>
</body>
</html>



