@using Lottery.DoMain.Enum;
@using Lottery.DoMain.Extentions;
@using Lottery.Service.ServiceProvider;
@using Lottery.Service.ServiceProvider.Interface;
@using Lottery.DoMain.Models;
@using Lottery.DoMain.Constant;
@using Lottery.DoMain.Models;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    IProvider provider = new Provider();

    List<ChanelGroup> dataChanel = new List<ChanelGroup>();
    var dataBase = provider.GetAsync<List<ChanelGroup>>(ApiUri.Get_CommonChanels);
    if (dataBase != null && dataBase.Result != null && dataBase.Result.Data != null)
    {
        dataChanel = dataBase.Result.Data;
    }
}

<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Typescript UI Controls">
<meta name="author" content="Syncfusion">
<link href="styles.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-base/styles/material.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-inputs/styles/material.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-dropdowns/styles/material.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-buttons/styles/material.css" rel="stylesheet">
<script src="https://cdn.syncfusion.com/ej2/22.2.5/dist/ej2.min.js" type="text/javascript"></script>
<script src="https://cdn.syncfusion.com/ej2/syncfusion-helper.js" type="text/javascript"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
<html>
<head>
    <style>

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            appearance: none;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
        }

        .container {
            display: flex;
            flex-flow: column;
            align-items: center;
            margin-top: 12px;
            margin-bottom: 100px;
            width: 100%;
        }

        .div_btn_add_row {
            display: flex;
            flex-flow: column;
            align-items: flex-end;
            margin-top: 8px;
            width: 100%;
        }

        .btn_add_custom {
            height: 28px;
            font-size: 12px;
            border-radius: 4px;
            font-weight: 400;
            line-height: 1.4;
            display: flex;
            -webkit-box-pack: center;
            justify-content: center;
            -webkit-box-align: center;
            align-items: center;
            cursor: pointer;
            border: 1px solid rgb(7, 171, 226);
            color: rgb(7, 171, 226);
            background: white;
        }

        .span {
            margin-left: 5px;
            font-size: 15px;
            font-weight: 800;
        }

        .div_result {
            display: flex;
            flex-flow: column;
            align-items: start;
            margin-top: 20px;
            width: 100%;
        }

        .bordered-div {
            border: 1.5px dashed rgb(0, 153, 0);
            padding: 10px;
            position: relative;
        }

        .name-input {
            position: absolute;
            top: -15px;
            left: 10px;
            background-color: white;
            padding: 2px;
            border: none;
        }
    </style>
</head>
<body>
    @Html.AntiForgeryToken()
    <div class="container">
        <div style="width:900px;">
            <button id="btn_add_calculate" style="background: forestgreen !important;" class="btn-core-accept">
                Thêm
                <i style="margin-left:5px;" class="fa fa-user-plus"></i>
            </button>
            <div id="div_calculate" style="margin-top:30px;">
                <input type="text" style="display:none;" class="name-input" id="nameInput" placeholder="Nhập tên">
                <div id="div_row" style="margin-top:20px;" class="row">
                    <div class="col-2">
                        <select id="combo_LoDeXien" class="form-select" aria-label="Default select example">
                            @{
                                foreach (var item in Enum.GetValues(typeof(LotteryEnum)))
                                {
                                    <option value="@((int)item)"> @StringExtension.GetDescription((Enum)item)</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-4">
                        <div id="div_selectNhaDai">
                            <select id="selectNhaDai">
                                @{
                                    if (dataChanel != null && dataChanel.Count > 0)
                                    {
                                        foreach (var chanels in dataChanel)
                                        {
                                            <optgroup label="@chanels.Key">
                                                @foreach(var chanel in chanels.Value)
                                                {
                                                    <option value="@chanel.Key">@chanel.Value</option>
                                                }
                                            </optgroup>
                                        }
                                    }

                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-4">
                        <div id="div_select_number">
                            <!--element which is going to render the MultiSelect-->
                            <input type="text" tabindex="1" id="select_number">
                        </div>
                    </div>
                    <div class="col-2">
                        <div id="box_login_form_account" class="box-input-login">
                            <input style="height:38px;width:100px;" id="nhap_so_diem" type="number" onKeyUp="validaeInPutNhapSoDiem()" required maxlength="10" placeholder="Nhập số">
                        </div>
                    </div>
                </div>
                <div class="div_btn_add_row">
                    <button id="btn_add_row" onclick="addRowClick()" style="margin-right: 26px;" class="btn_add_custom btn-core-accept">
                        Thêm dòng
                        <i style="margin-left:5px;" class="fa fa-plus-circle"></i>
                    </button>
                </div>
                <div id="div_result" class="div_result">
                    <div style="display:flex;gap:10px;">
                        <button id="btn_send_result" style="" class="btn_add_custom btn-core-accept" onclick="executeCalculate()">Tính tiền</button>
                        <input style="height:28px;width:50px;" id="input_ty_le_sap" required maxlength="4" placeholder="" type="number" onKeyUp="validaeInPutTyLeSap()" value="0.75">
                        <p id="validationMessage"></p>
                    </div>
                    <div class="row" style="margin-top: 15px; min-width: 320px;">
                        <span class="col-4">Tiền xác</span>
                        <span class="col-4">Tiền thưởng</span>
                        <span id="lable_viewTong" class="col-4"></span>
                    </div>
                    <div class="row" style="margin-top: 15px;display:none">
                        <span id="lable_xac" class="col-4">lable_xac</span>
                        <span id="lable_thuong" class="col-4">lable_thuong</span>
                        <span id="lable_tong" class="col-4">lable_tong</span>
                    </div>
                </div>
            </div>

            <div id="div_calculate_virtual" class="bordered-div" style="display:none;margin-top:50px;">
                <input type="text" class="name-input" id="nameInput" placeholder="Nhập tên">
                <div id="div_row" style="margin-top:20px;" class="row">
                    <div class="col-2">
                        <select id="combo_LoDeXien" class="form-select" aria-label="Default select example">
                            @{
                                foreach (var item in Enum.GetValues(typeof(LotteryEnum)))
                                {
                                    <option value="@((int)item)"> @StringExtension.GetDescription((Enum)item)</option>
                                }
                            }
                        </select>
                    </div>
                    <div class="col-4">
                        <div id="div_selectNhaDai">
                            <select id="selectNhaDai_virtual">
                                @{
                                    if (dataChanel != null && dataChanel.Count > 0)
                                    {
                                        foreach (var chanels in dataChanel)
                                        {
                                            <optgroup label="@chanels.Key">
                                                @foreach (var chanel in chanels.Value)
                                                {
                                                    <option value="@chanel.Key">@chanel.Value</option>
                                                }
                                            </optgroup>
                                        }
                                    }

                                }
                            </select>
                        </div>
                    </div>
                    <div class="col-4">
                        <div id="div_select_number">
                            <!--element which is going to render the MultiSelect-->
                            <input type="text" tabindex="1" id="select_number">
                        </div>
                    </div>
                    <div class="col-2">
                        <div id="box_login_form_account" class="box-input-login">
                            <input style="height:38px;width:100px;" id="nhap_so_diem" type="number" onKeyUp="validaeInPutNhapSoDiem()" required maxlength="10" placeholder="Nhập số">
                        </div>
                    </div>
                </div>
                <div class="div_btn_add_row">
                    <button id="btn_add_row" onclick="addRowClick()" style="margin-right: 22px;" class="btn_add_custom btn-core-accept">
                        Thêm dòng
                        <i style="margin-left:5px;" class="fa fa-plus-circle"></i>
                    </button>
                </div>
                <div id="div_result" class="div_result">
                    <div style="display:flex;gap:10px;">
                        <button id="btn_send_result" style="" class="btn_add_custom btn-core-accept" onclick="executeCalculate()">Tính tiền</button>
                        <input style="height:28px;width:50px;" id="input_ty_le_sap" required maxlength="4" placeholder="" type="number" onKeyUp="validaeInPutTyLeSap()" value="0.75">
                        <p id="validationMessage"></p>
                    </div>
                    <div class="row" style="margin-top: 15px; min-width: 320px;">
                        <span class="col-4">Tiền xác</span>
                        <span class="col-4">Tiền thưởng</span>
                        <span id="lable_viewTong" class="col-4"></span>
                    </div>
                    <div class="row" style="margin-top: 15px;display:none">
                        <span id="lable_xac" class="col-4">lable_xac</span>
                        <span id="lable_thuong" class="col-4">lable_thuong</span>
                        <span id="lable_tong" class="col-4">lable_tong</span>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <script>

        var managerDiv = {
            div_calculate: {
                key: "000",
                div_row: {
                    data: ["000"] 
                }
            }
        };

        // Thêm dữ liệu vào mảng data của div_row
        managerDiv.div_calculate.div_row.data.push("Dòng 1");
        managerDiv.div_calculate.div_row.data.push("Dòng 2");
        managerDiv.div_calculate.div_row.data.push("Dòng 3");
        var randomCode = generateRandomCode(3);

        $(document).ready(function () {
            // initialize MultiSelect component
            var sportsData = [];
            for (var i = 0; i < 100; i++) {
                // Chuyển số i thành chuỗi, và nếu chiều dài của chuỗi < 2, thêm '0' ở trước
                var numberStr = i < 10 ? '0' + i : i.toString();

                // Thêm chuỗi numberStr vào mảng sportsData
                sportsData.push(numberStr);
            }
            var listObj = new ej.dropdowns.MultiSelect({
                dataSource: sportsData,
                placeholder: "Chọn số"
            });
            listObj.appendTo('#select_number');

            // initialize MultiSelect component have groupBy
            var listObj = new ej.dropdowns.MultiSelect({
                placeholder: "Chọn nhà đài"
            });
            listObj.appendTo('#selectNhaDai');

        });

        $('#btn_add_calculate').click(function (e) {

            setPropertyWhenAddCalculate();

            var originalElement = document.getElementById("div_calculate_virtual");
            var clonedElement = originalElement.cloneNode(true);

            // Đặt ID mới cho phần tử sao chép
            clonedElement.id = "div_calculate_virtual_new";

            //Duyệt qua tất cả các phần tử con và thay đổi ID của chúng
            function changeIds(element) {
                if (element.id && element.id == "div_selectNhaDai") {
                    element.id = element.id + "_clone";
                }
                if (element.id && element.id == "div_select_number") {
                    element.id = element.id + "_clone";
                }
                if (element.children && element.children.length > 0) {
                    for (var i = 0; i < element.children.length; i++) {
                        changeIds(element.children[i]); // Đệ quy cho các phần tử con
                    }
                }
            }

            changeIds(clonedElement);

            // Thêm phần tử sao chép vào DOM sau phần tử gốc
            originalElement.parentNode.insertBefore(clonedElement, originalElement.nextSibling);

            // Lấy tham chiếu đến phần tử bằng ID
            var element = document.getElementById("div_calculate_virtual_new");

            if (element) {
                element.style.display = "block";
            }

            createMultiSelectNhaDaiClone();
            createMultiSelectNumberClone();

        });

        function setPropertyWhenAddCalculate() {
            var div_calculateElement = document.getElementById("div_calculate");
            div_calculateElement.classList.add("bordered-div");
            var nameInputElement = document.getElementById("nameInput");
            nameInputElement.style.display = "block";
            var btn_add_rowElement = document.getElementById("btn_add_row");
            btn_add_rowElement.style.marginRight = "22px";
        }

        function addRowClick() {
            var originalElement = document.getElementById("div_row");
            var clonedElement = originalElement.cloneNode(true);

            // Đặt ID mới cho phần tử sao chép
            clonedElement.id = "div_row_new";

            // Duyệt qua tất cả các phần tử con và thay đổi ID của chúng
            function changeIds(element) {
                if (element.id && element.id == "div_selectNhaDai") {
                    element.id = element.id + "_clone2";
                }
                if (element.id && element.id == "div_select_number") {
                    element.id = element.id + "_clone2";
                }
                if (element.children && element.children.length > 0) {
                    for (var i = 0; i < element.children.length; i++) {
                        changeIds(element.children[i]); // Đệ quy cho các phần tử con
                    }
                }
            }

            changeIds(clonedElement);

            // Thêm phần tử sao chép vào DOM sau phần tử gốc
            originalElement.parentNode.insertBefore(clonedElement, originalElement.nextSibling);

            createMultiSelectNhaDaiClone2();
            createMultiSelectNumberClone2();

        }

        function createMultiSelectNhaDaiClone() {
            // Lấy đối tượng div theo ID
            var divToReplace = document.getElementById("div_selectNhaDai_clone");
            // Tạo một nội dung HTML mới (ví dụ: một đoạn HTML mới)
            var selectHtml = '<select id="selectNhaDai1">' +
                '<optgroup label="Phía Bắc">' +
                '<option value="1">Hà Nội</option>' +
                '<option value="2">Bắc Ninh</option>' +
                '<option value="3">Thanh Hóa</option>' +
                '</optgroup>' +
                '<optgroup label="Phía Nam">' +
                '<option value="4">Sài Gòn</option>' +
                '<option value="5">Đồng Nai</option>' +
                '<option value="6">Đồng Tháp</option>' +
                '</optgroup>' +
                '</select>';

            // Thay thế nội dung của div bằng nội dung mới
            divToReplace.innerHTML = selectHtml;
            var listObj = new ej.dropdowns.MultiSelect({
                placeholder: "Chọn nhà đài"
            });
            listObj.appendTo('#selectNhaDai1');
        }

        function createMultiSelectNumberClone() {
            // Lấy đối tượng div theo ID
            var divToReplace = document.getElementById("div_select_number_clone");
            // Tạo một nội dung HTML mới (ví dụ: một đoạn HTML mới)
            var selectHtml = '<input type="text" tabindex="1" id="select_number1">';
            // Thay thế nội dung của div bằng nội dung mới
            divToReplace.innerHTML = selectHtml;
            var sportsData = [];
            for (var i = 0; i < 100; i++) {
                // Chuyển số i thành chuỗi, và nếu chiều dài của chuỗi < 2, thêm '0' ở trước
                var numberStr = i < 10 ? '0' + i : i.toString();

                // Thêm chuỗi numberStr vào mảng sportsData
                sportsData.push(numberStr);
            }
            var listObj = new ej.dropdowns.MultiSelect({
                dataSource: sportsData,
                placeholder: "Chọn số"
            });
            listObj.appendTo('#select_number1');
        }

        function createMultiSelectNhaDaiClone2() {
            // Lấy đối tượng div theo ID
            var divToReplace = document.getElementById("div_selectNhaDai_clone2");
            // Tạo một nội dung HTML mới (ví dụ: một đoạn HTML mới)

            var element = document.getElementById("selectNhaDai_virtual");
            var htmlContent = element.outerHTML;
            htmlContent = htmlContent.replace("selectNhaDai_virtual", "selectNhaDai2");
            
            var selectHtml = htmlContent;

            // Thay thế nội dung của div bằng nội dung mới
            divToReplace.innerHTML = selectHtml;
            var listObj = new ej.dropdowns.MultiSelect({
                placeholder: "Chọn nhà đài"
            });
            listObj.appendTo('#selectNhaDai2');
        }

        function createMultiSelectNumberClone2() {
            // Lấy đối tượng div theo ID
            var divToReplace = document.getElementById("div_select_number_clone2");
            // Tạo một nội dung HTML mới (ví dụ: một đoạn HTML mới)
            var selectHtml = '<input type="text" tabindex="1" id="select_number2">';
            // Thay thế nội dung của div bằng nội dung mới
            divToReplace.innerHTML = selectHtml;
            var sportsData = [];
            for (var i = 0; i < 100; i++) {
                // Chuyển số i thành chuỗi, và nếu chiều dài của chuỗi < 2, thêm '0' ở trước
                var numberStr = i < 10 ? '0' + i : i.toString();

                // Thêm chuỗi numberStr vào mảng sportsData
                sportsData.push(numberStr);
            }
            var listObj = new ej.dropdowns.MultiSelect({
                dataSource: sportsData,
                placeholder: "Chọn số"
            });
            listObj.appendTo('#select_number2');
        }

        function validaeInPutTyLeSap() {
            var val = document.getElementById("input_ty_le_sap");
            const value = parseFloat(val.value);
            if (isNaN(value) || value < 0 || value >= 1) {
                val.value = "0.75";
            }
        }

        function validaeInPutNhapSoDiem() {
            var val = document.getElementById("nhap_so_diem");
            const value = parseFloat(val.value);
            if (value < 0) {
                val.value = "0";
            }
        }

        function executeCalculate() {
            alert("oke");
        }

        function generateRandomCode(length) {
            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            var code = '';

            for (var i = 0; i < length; i++) {
                var randomIndex = Math.floor(Math.random() * characters.length);
                code += characters.charAt(randomIndex);
            }

            return code;
        }

    </script>
</body>
</html>



