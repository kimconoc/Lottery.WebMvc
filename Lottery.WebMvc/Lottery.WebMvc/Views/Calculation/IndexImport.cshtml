@using Lottery.DoMain.Enum;
@using Lottery.DoMain.Extentions;
@using Lottery.Service.ServiceProvider;
@using Lottery.Service.ServiceProvider.Interface;
@using Lottery.DoMain.Constant;
@using Lottery.DoMain.Models;
@using Newtonsoft.Json;
@{
    Layout = "~/Views/Shared/_Layout.cshtml";

    FormsIdentity id = (FormsIdentity)HttpContext.Current.User.Identity;
    FormsAuthenticationTicket ticket = id.Ticket;
    var userData = JsonConvert.DeserializeObject<User>(ticket.UserData);

    IProvider provider = new Provider();

    List<ChanelGroup> dataChanel = new List<ChanelGroup>();
    var dataBase = provider.GetAsync<List<ChanelGroup>>(ApiUri.Get_CommonChanels);
    if (dataBase != null && dataBase.Result != null && dataBase.Result.Data != null)
    {
        dataChanel = dataBase.Result.Data;
    }

    List<Phonebook> phonebooks = new List<Phonebook>();
    var dataBasePhonebook = provider.GetAsync<List<Phonebook>>(string.Format(ApiUri.Get_Phonebook + "/{0}", userData.Id));
    if (dataBasePhonebook != null && dataBasePhonebook.Result != null && dataBasePhonebook.Result.Data != null)
    {
        phonebooks = dataBasePhonebook.Result.Data;
    }
}

<!DOCTYPE html>
<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1.0">
<meta name="description" content="Typescript UI Controls">
<meta name="author" content="Syncfusion">
<link href="~/assets/css/calculationImport.css" rel="stylesheet" />
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-base/styles/material.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-inputs/styles/material.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-dropdowns/styles/material.css" rel="stylesheet">
<link href="https://cdn.syncfusion.com/ej2/22.2.5/ej2-buttons/styles/material.css" rel="stylesheet">
<script src="https://cdn.syncfusion.com/ej2/22.2.5/dist/ej2.min.js" type="text/javascript"></script>
<script src="https://cdn.syncfusion.com/ej2/syncfusion-helper.js" type="text/javascript"></script>
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.1.0/css/all.min.css">
<html>
<head>
    <style>

        .temporary-border {
            border: 1px solid red;
        }

        input[type="number"]::-webkit-inner-spin-button,
        input[type="number"]::-webkit-outer-spin-button {
            -webkit-appearance: none;
            appearance: none;
            margin: 0;
        }

        input[type="number"] {
            -moz-appearance: textfield;
        }

        input {
            background-color: white;
            padding: 10px;
            border: none;
        }

        .e-input-group input.e-input, .e-input-group.e-control-wrapper input.e-input, .e-input-group textarea.e-input, .e-input-group.e-control-wrapper textarea.e-input {
            font-size: 14px;
        }

        .e-input-group input.e-input, .e-float-input.e-input-group input, .e-input-group.e-control-wrapper input.e-input, .e-float-input.e-input-group.e-control-wrapper input, .e-float-input input, .e-float-input.e-control-wrapper input {
            font-size: 14px;
        }



        .phonebook-import {
            color: #e3165b;
            font-size: 22px;
            position: absolute;
            top: -15px;
            left: 185px;
            background-color: white;
            padding: 2px;
            border: none;
            cursor: pointer;
        }


        .modal {
            display: none; /* Hidden by default */
            position: fixed; /* Stay in place */
            z-index: 10000; /* Sit on top */
            padding-top: 100px; /* Location of the box */
            left: 0;
            top: 0;
            width: 100%; /* Full width */
            height: 100%; /* Full height */
            overflow: auto; /* Enable scroll if needed */
            background-color: rgb(0,0,0); /* Fallback color */
            background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
            flex-flow: row;
            justify-content: center;
        }

            .modal .modal-dialog {
                width: 100%;
            }

                .modal .modal-dialog .modal-content {
                    padding: 10px;
                    width: 100%;
                    height: 60vh;
                }

                    .modal .modal-dialog .modal-content .div-list-player {
                        background-color: white;
                        border-radius: 10px;
                        padding: 10px;
                    }

                        .modal .modal-dialog .modal-content .div-list-player .row-player {
                            margin-bottom: 10px;
                        }

                            .modal .modal-dialog .modal-content .div-list-player .row-player .head-row-player {
                                display: flex;
                                border-bottom: 1px solid #eee;
                                justify-content: space-between !important;
                            }

                                .modal .modal-dialog .modal-content .div-list-player .row-player .head-row-player h4 {
                                    font-size: 17px;
                                }

                                .modal .modal-dialog .modal-content .div-list-player .row-player .head-row-player i {
                                    flex: 1;
                                    margin-top: 2px;
                                    margin-right: 10px;
                                    cursor: pointer;
                                    margin-left: 5px;
                                    font-size: 16px;
                                    color: #d85261;
                                }

                            .modal .modal-dialog .modal-content .div-list-player .row-player .div-info {
                                display: flex;
                                flex-flow: row;
                                gap: 30px;
                                margin-top: 8px;
                            }

                                .modal .modal-dialog .modal-content .div-list-player .row-player .div-info div {
                                    display: flex;
                                    flex-flow: column;
                                    align-items: center;
                                    text-align: center;
                                }

                    .modal .modal-dialog .modal-content .margin-bottom-row {
                        margin-top: 5px;
                        border-bottom: 1px solid #e3165b;
                    }
    </style>
</head>
<body>
    @Html.AntiForgeryToken()
    <div class="container">
        <div>

            <button id="btn_add_calculate" style="background: #e3165b !important; margin-bottom: -10px;" class="btn-core-accept">
                Thêm
                <i style="margin-left:5px;" class="fa fa-user-plus"></i>
            </button>

            <div id="div_calculate_virtual" class="bordered-div">
                <input type="text" class="name-input" id="nameInput" placeholder="Nhập tên">
                <i onclick="openPopupPhonebook(this)" class="phonebook-import fa fa-address-book" id="phonebook_import" aria-hidden="true"></i>
                <button onclick="deleteDivCalculate(this)" id="delete_div_calculate" class="btn-danger">Xóa</button>
                <div id="div_row" class="div-row">
                    <div style="flex: 1;" id="div_textImportMultiline">
                        <textarea id="text_import_multiline" name="text"></textarea>
                    </div>
                    <div class="div-nhap-so-diem">
                        <div class="nhap-so-diem">
                            <i onclick="deleteRow(this)" id="delete_row" class="fa fa-trash" aria-hidden="true"></i>
                        </div>
                    </div>
                </div>
                <div class="div-btn-add-row">
                    <button id="btn_add_row" onclick="addRowClick(this)" class="btn-custom btn-core-accept">
                        Thêm dòng
                        <i class="fa fa-plus-circle"></i>
                    </button>
                </div>
                <div class="div-calculate-result">
                    <div class="div-calculate">
                        <div>
                            <button id="btn_send_result" class="btn-custom btn-core-accept" onclick="executeCalculate(this)">Tính tiền</button>
                        </div>
                        <div>
                            <span>Xác</span>
                            <input style="padding-left: 15px " id="input_ty_le_sap" required maxlength="4" placeholder="" type="number" onKeyUp="validaeInPutTyLeSap(this)" value="0.75">
                        </div>
                        <div>
                            <span>Ba số</span>
                            <input style="padding-left: 15px " id="input_ty_le_ba_so" required maxlength="4" placeholder="" type="number" onKeyUp="validaeInPutTyLeSap(this)" value="650">
                        </div>
                        <div>
                            <span>Thưởng</span>
                            <input style="padding-left: 20px " id="input_ty_le_thuong" required maxlength="4" placeholder="" type="number" value="75">
                        </div>
                    </div>
                    <div class="div-result">
                        <div>
                            <span>Tiền xác</span>
                            <strong id="lbl_xac">0</strong>
                        </div>
                        <div>
                            <span>Tiền thưởng</span>
                            <strong id="lbl_thuong">0</strong>
                        </div>
                        <div id="div_lbl_result" class="div-lbl-result">
                            <span>Lời</span>
                            <strong id="lbl_result">0</strong>
                        </div>
                    </div>
                </div>
                <div id="div_box_more_message">
                    <div id="box_more_message" class="box-more-message">
                        <div class="box-more-message-title">
                            <span id="target_onclick" onclick="targetOnclick(this)" data-toggle="collapse" data-target="#showLotterymessage_content">Mở rộng</span>
                            <i id="showLotterymessage_icon" class="fa fa-angle-double-down"></i>
                        </div>
                        <div id="showLotterymessage_content" class="collapse">
                            <div class="box-more-message-content">
                                <div class="box-more-message-content-✓">
                                    ✓
                                </div>
                                <div class="box-more-message-content-detailt">
                                    Không có thông tin nào
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </div>
    </div>
    <div class="modal" tabindex="-1" role="dialog" id="modal_phonebook">
        <div class="modal-popup modal-dialog" role="document">
            <div class="modal-content">
                <button style="margin-top:-15px;" class="aria-hidden close" aria-label="Close" onclick="CloseModalVoucher()">
                    <span style="float:right;margin-right: -5px;margin-top: 5px;" aria-hidden="true">&times;</span>
                </button>

                <div style="overflow: auto;">
                    <div class="div-list-player">
                        @if (phonebooks != null && phonebooks.Count > 0)
                        {
                            foreach (var item in phonebooks)
                            {
                                <div class="row-player">
                                    <div>
                                        <div class="head-row-player">
                                            <h4 class="page-header margin-top-none">@item.Name</h4>
                                            <div>
                                                <i onclick="ChoosePlayer(this)" class="fa fa-eyedropper" id="@item.Id" aria-hidden="true"></i>
                                            </div>
                                        </div>
                                        <div class="margin-bottom-sm"></div>
                                        <div class="div-info">
                                            <div>
                                                <span>Tiền xác</span>
                                                <strong id="lbl_xac">@item.TileXac</strong>
                                            </div>
                                            <div>
                                                <span>Tiền thưởng</span>
                                                <strong id="lbl_thuong">@item.TileThuong</strong>
                                            </div>
                                            <div id="div_lbl_result" class="div-lbl-result">
                                                <span>Ba số</span>
                                                <strong id="lbl_result">@item.TileBaSo</strong>
                                            </div>
                                        </div>
                                    </div>
                                    <div class="margin-bottom-row"></div>
                                </div>

                            }
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>
    <script>

        var modal = document.getElementById("modal_phonebook");
        var userData = @Html.Raw(Json.Encode(userData));
        var choosePhonebookId;

        var div_calculate = "div_calculate";
        var delete_div_calculate = "delete_div_calculate";
        var nameInput = "nameInput";
        var phonebook_import = "phonebook_import";
        var div_textImportMultiline = "div_textImportMultiline";
        var text_import_multiline = "text_import_multiline";
        var div_row = "div_row";
        var delete_row = "delete_row";
        var btn_add_row = "btn_add_row";
        var btn_send_result = "btn_send_result";
        var select_number = "select_number";
        var nhap_so_diem = "nhap_so_diem";
        var div_result = "div_result";
        var input_ty_le_ba_so = "input_ty_le_ba_so";
        var input_ty_le_thuong = "input_ty_le_thuong";
        var input_ty_le_sap = "input_ty_le_sap";
        var lbl_viewTong = "lbl_viewTong";
        var lbl_xac = "lbl_xac";
        var lbl_thuong = "lbl_thuong";
        var div_lbl_result = "div_lbl_result";
        var lbl_result = "lbl_result";
        var div_box_more_message = "div_box_more_message";
        var box_more_message = "box_more_message";
        var target_onclick = "target_onclick";
        var showLotterymessage_icon = "showLotterymessage_icon";
        var showLotterymessage_content = "showLotterymessage_content";

        function openPopupPhonebook(dom) {
            choosePhonebookId = dom.id;
            modal.style.display = "flex";
        }
        function CloseModalVoucher() {
            modal.style.display = "none";
        }
        function ChoosePlayer(dom) {
            var phonebooks = @Html.Raw(Json.Encode(phonebooks));
            var phonebook = null;
            for (var i = 0; i < phonebooks.length; i++) {
                if (phonebooks[i].Id == dom.id) {
                    phonebook = phonebooks[i];
                    break;
                }
            }
            var randomIdOut = choosePhonebookId.substring(choosePhonebookId.length - 5);
            document.getElementById(nameInput + randomIdOut).value = phonebook.Name;
            document.getElementById(input_ty_le_sap + randomIdOut).value = phonebook.TileXac;
            document.getElementById(input_ty_le_ba_so + randomIdOut).value = phonebook.TileBaSo;
            document.getElementById(input_ty_le_thuong + randomIdOut).value = phonebook.TileThuong;

            modal.style.display = "none";
        }

        $(document).ready(function () {
            getDesignDivCalculate();
        });

        $('#btn_add_calculate').click(function (e) {
            getDesignDivCalculate();
            setPropertyWhenAddCalculate();
        });

        function getDesignDivCalculate() {
            var originalElement = document.getElementById("div_calculate_virtual");
            var clonedElement = originalElement.cloneNode(true);
            var randomIdOut = generateRandomCode(5);
            var randomIdIn = generateRandomCode(5);
            // Đặt ID mới cho phần tử sao chép
            clonedElement.id = div_calculate + randomIdOut;

            //Duyệt qua tất cả các phần tử con và thay đổi ID của chúng
            function changeIds(element) {
                if (element.id && element.id == nameInput) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == phonebook_import) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == div_textImportMultiline) {
                    element.id = element.id + randomIdOut + randomIdIn;
                }
                if (element.id && element.id == text_import_multiline) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == delete_div_calculate) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == btn_add_row) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == div_row) {
                    element.id = element.id + randomIdOut + randomIdIn;
                }
                if (element.id && element.id == input_ty_le_ba_so) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == nhap_so_diem) {
                    element.id = element.id + randomIdOut + randomIdIn;
                }
                if (element.id && element.id == delete_row) {
                    element.id = element.id + randomIdOut + randomIdIn;
                }
                if (element.id && element.id == btn_send_result) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == input_ty_le_sap) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == input_ty_le_thuong) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == lbl_xac) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == lbl_thuong) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == div_lbl_result) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == lbl_result) {
                    element.id = element.id + randomIdOut ;
                }
                if (element.id && element.id == div_box_more_message) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == box_more_message) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == target_onclick) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == showLotterymessage_icon) {
                    element.id = element.id + randomIdOut;
                }
                if (element.id && element.id == showLotterymessage_content) {
                    element.id = element.id + randomIdOut;
                }
                if (element.children && element.children.length > 0) {
                    for (var i = 0; i < element.children.length; i++) {
                        changeIds(element.children[i]); // Đệ quy cho các phần tử con
                    }
                }
            }

            changeIds(clonedElement);

            // Thêm phần tử sao chép vào DOM sau phần tử gốc
            originalElement.parentNode.insertBefore(clonedElement, originalElement.nextSibling);

            // Lấy tham chiếu đến phần tử bằng ID
            var element = document.getElementById(div_calculate + randomIdOut);

            if (element) {
                element.style.display = "block";
            }
            createDataTargetClone(randomIdOut);
            createMultiImportMultiline(randomIdOut, randomIdIn);
        }

        function deleteDivCalculate(dom) {
            var IdBtnAddRow = dom.id;
            var randomIdOut = IdBtnAddRow.substring(IdBtnAddRow.length - 5);
            var elementToRemove = document.getElementById(div_calculate + randomIdOut);
            elementToRemove.remove();
            setPropertyWhenAddCalculate();
        }

        function setPropertyWhenAddCalculate() {

            var ListidDelete_div_calculate = getListIdAsRequired(delete_div_calculate);
            if (ListidDelete_div_calculate.length > 2) {
                for (var itemId of ListidDelete_div_calculate) {
                    var delete_div_calculateElement = document.getElementById(itemId);
                    delete_div_calculateElement.style.display = "block";
                }
            }
            else {
                for (var itemId of ListidDelete_div_calculate) {
                    var delete_div_calculateElement = document.getElementById(itemId);
                    delete_div_calculateElement.style.display = "none";
                }
            }

        }

        function addRowClick(dom) {
            var IdBtnAddRow = dom.id;
            var randomIdOut = IdBtnAddRow.substring(IdBtnAddRow.length - 5);
            var idDiv_rowList = getListIdAsRequired(div_row + randomIdOut);
            var div_rowClone = idDiv_rowList[idDiv_rowList.length - 1];

            var originalElement = document.getElementById(div_rowClone);
            var clonedElement = originalElement.cloneNode(true);

            var randomIdIn = generateRandomCode(5);
            // Đặt ID mới cho phần tử sao chép
            clonedElement.id = div_row + randomIdOut + randomIdIn;

            // Duyệt qua tất cả các phần tử con và thay đổi ID của chúng
            function changeIds(element) {
                if (element.id && element.id.indexOf(div_textImportMultiline) !== -1) {
                    element.id = div_textImportMultiline + randomIdOut + randomIdIn;
                }
                if (element.id && element.id.indexOf(text_import_multiline) !== -1) {
                    element.id = text_import_multiline + randomIdOut + randomIdIn;
                }
                if (element.id && element.id.indexOf(nhap_so_diem) !== -1) {
                    element.id = nhap_so_diem + randomIdOut + randomIdIn;;
                }
                if (element.id && element.id.indexOf(delete_row) !== -1) {
                    element.id = delete_row + randomIdOut + randomIdIn;;
                }
                if (element.children && element.children.length > 0) {
                    for (var i = 0; i < element.children.length; i++) {
                        changeIds(element.children[i]); // Đệ quy cho các phần tử con
                    }
                }
            }
            changeIds(clonedElement);
            // Thêm phần tử sao chép vào DOM sau phần tử gốc
            originalElement.parentNode.insertBefore(clonedElement, originalElement.nextSibling);

            setPropertyWhenAddRow(randomIdOut);
            createMultiImportMultiline(randomIdOut, randomIdIn);
        }

        function createMultiImportMultiline(randomIdOut, randomIdIn) {
            var newDiv_textImportMultiline = div_textImportMultiline + randomIdOut + randomIdIn;
            // Lấy đối tượng div theo ID
            var divToReplace = document.getElementById(newDiv_textImportMultiline);
            // Tạo một nội dung HTML mới (ví dụ: một đoạn HTML mới)
            var selectHtml = '<textarea id="text_import_multiline" name="text"></textarea>';
            var newText_import_multiline = "text_import_multiline" + randomIdOut + randomIdIn;
            selectHtml = selectHtml.replace("text_import_multiline", newText_import_multiline);
            // Thay thế nội dung của div bằng nội dung mới
            divToReplace.innerHTML = selectHtml;

            // Initialize TextBox component
            var textareaObject = new ej.inputs.TextBox({
                placeholder: 'Nhập nội dung',
                floatLabelType: 'Auto',
                created: function () {
                    this.addAttributes({ rows: "2" });
                    this.element.style.height = "auto";
                    this.element.style.height = (this.element.scrollHeight - 7) + "px";
                },
                input: function () {
                    this.element.style.height = "auto";
                    this.element.style.height = (this.element.scrollHeight) + "px";
                }
            });
            // Render initialized TextBox
            textareaObject.appendTo('#' + newText_import_multiline);
        }

        function deleteRow(dom) {
            var IdBtnAddRow = dom.id;
            var randomIdfull = IdBtnAddRow.substring(IdBtnAddRow.length - 10);
            var randomIdOut = randomIdfull.substring(0,5);
            var elementToRemove = document.getElementById(div_row + randomIdfull);
            elementToRemove.remove();
            setPropertyWhenAddRow(randomIdOut);
        }

        function setPropertyWhenAddRow(randomIdOut) {
            var Listiddelete_row = getListIdAsRequired(delete_row + randomIdOut);
            if (Listiddelete_row.length > 1) {
                for (var itemId of Listiddelete_row) {
                    var delete_rowElement = document.getElementById(itemId);
                    delete_rowElement.style.display = "inline";
                }
            }
            else {
                for (var itemId of Listiddelete_row) {
                    var delete_rowElement = document.getElementById(itemId);
                    delete_rowElement.style.display = "none";
                }
            }
        }

        function createDataTargetClone(randomIdOut) {
            // Lấy đối tượng div theo ID
            var divToReplace = document.getElementById(div_box_more_message + randomIdOut);
            // Tạo một nội dung HTML mới (ví dụ: một đoạn HTML mới)

            var element = document.getElementById("box_more_message" + randomIdOut);
            var htmlContent = element.outerHTML;
            var newTargetId = "#showLotterymessage_content" + randomIdOut;
            htmlContent = htmlContent.replace("#showLotterymessage_content", newTargetId);

            var selectHtml = htmlContent;

            // Thay thế nội dung của div bằng nội dung mới
            divToReplace.innerHTML = selectHtml;

        }

        function validaeInPutTyLeSap(dom) {
            var val = document.getElementById(dom.id);
            const value = parseFloat(val.value);
            if (isNaN(value) || value < 0 || value >= 1) {
                val.value = "0.75";
            }
        }

        function validaeInPutNhapSoDiem(dom) {
            var val = document.getElementById(dom.id);
            const value = parseFloat(val.value);
            if (value < 0) {
                val.value = "0";
            }
        }

        function executeCalculate(dom) {
            var IdBtnAddRow = dom.id;
            var randomIdOut = IdBtnAddRow.substring(IdBtnAddRow.length - 5);

            var isValidate = false;

            var calculationModel = [];

            calculationJsons = JSON.stringify(calculationModel);
            $.ajax({
                    type: "POST",
                    traditional: true,
                    async: false,
                    data:
                    {
                        "calculationJson": calculationJsons,
                    },
                    url: "@Url.Action("ExecuteCalculation", "Calculation")",
                    success: function (data)
                    {
                        if (data.Success && data.Data) {
                            var idLbl_xac = lbl_xac + randomIdOut;
                            var idLbl_thuong = lbl_thuong + randomIdOut;
                            var idLbl_result = lbl_result + randomIdOut;

                            document.getElementById(idLbl_xac).textContent = data.Data.Xac;
                            document.getElementById(idLbl_thuong).textContent = data.Data.Thuong;
                            document.getElementById(idLbl_result).textContent = data.Data.Loi;
                            var idDiv_lbl_result = div_lbl_result + randomIdOut;
                            var divElement = document.getElementById(idDiv_lbl_result);
                            var spanElement = divElement.querySelector("span");
                            var strongElement = divElement.querySelector("strong");
                            var idBox_more_message = box_more_message + randomIdOut;
                            var element_more_message = document.getElementById(idBox_more_message);
                            if (data.Data.Loi > 0) {
                                spanElement.style.color = "blue"
                                strongElement.style.color = "blue"
                            }
                            else {
                                spanElement.style.color = "red"
                                strongElement.style.color = "red"
                            }
                            if (data.Data.Thuong > 0) {
                                if (element_more_message) {
                                    element_more_message.style.display = "block";
                                }
                                showLotteryMessageContent(randomIdOut, data.Data.Message)
                            }
                            else {
                                if (element_more_message) {
                                    element_more_message.style.display = "none";
                                }
                            }
                        }
                        else {
                            alert("Có lỗi xảy ra!");
                        }
                    },
                })

        }

        function showLotteryMessageContent(randomIdOut, listMessage) {
            // Lấy đối tượng div theo ID
            if (listMessage == null || listMessage.length == 0) {
                return;
            }

            var divToReplace = document.getElementById(showLotterymessage_content + randomIdOut);
            var htmlContents = '';

            for (var i = 0; i < listMessage.length; i++) {
                var msg = listMessage[i];
                var htmlContent = `
                                    <div class="box-more-message-content">
                                        <div class="box-more-message-content-✓">
                                            ✓
                                        </div>
                                        <div class="box-more-message-content-detailt">
                                            ${msg}
                                        </div>
                                    </div>
                                `;

                htmlContents = htmlContents + htmlContent;
            }

            divToReplace.innerHTML = htmlContents;
        }

        function targetOnclick(dom) {
            var IdTarget = dom.id;
            var randomIdOut = IdTarget.substring(IdTarget.length - 5);
            if (dom.innerHTML.indexOf('Mở rộng') >= 0) {
                dom.innerText = "Thu lại";
                const element = document.getElementById(showLotterymessage_icon + randomIdOut);
                element.className = "fa fa-angle-double-up";
            }
            else {
                dom.innerText = "Mở rộng";
                const element = document.getElementById(showLotterymessage_icon + randomIdOut);
                element.className = "fa fa-angle-double-down";
            }
        }

        function validateData(randomIdOut, randomIdIn) {

            var randomIdfull = randomIdOut + randomIdIn
            var idInput_ty_le_ba_so = input_ty_le_ba_so + randomIdfull;
            var idInput_ty_le_sap = input_ty_le_sap + randomIdOut;
            var idInput_ty_le_thuong = input_ty_le_thuong + randomIdOut;

            var elementArr = [];
            if (document.getElementById(idInput_ty_le_sap).value === "" || !isNumber(document.getElementById(idInput_ty_le_sap).value)) {
                var element = document.getElementById(idInput_ty_le_sap);
                element.classList.add("temporary-border");
                elementArr.push(element);
            }
            if (document.getElementById(idInput_ty_le_thuong).value === "" || !isNumber(document.getElementById(idInput_ty_le_thuong).value)) {
                var element = document.getElementById(idInput_ty_le_thuong);
                element.classList.add("temporary-border");
                elementArr.push(element);
            }

            setTimeout(function () {

                for (var i = 0; i < elementArr.length; i++) {
                    var element = elementArr[i];
                    element.classList.remove("temporary-border");
                }
            }, 4000);

            if (elementArr.length > 0) {
                return true;
            }

            return false;

        }

        function isNumber(value) {
            return !isNaN(value);
        }

        function generateRandomCode(length) {
            var characters = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789';
            var code = '';

            for (var i = 0; i < length; i++) {
                var randomIndex = Math.floor(Math.random() * characters.length);
                code += characters.charAt(randomIndex);
            }

            return code;
        }

        function getListIdAsRequired(idInput) {
            var idList = [];
            var allElements = document.getElementsByTagName("*"); // Lấy tất cả các phần tử DOM

            for (var i = 0; i < allElements.length; i++) {
                var element = allElements[i];
                var elementId = element.id; // Lấy id của phần tử

                if (elementId && elementId.indexOf(idInput) !== -1) {
                    idList.push(elementId);
                }
            }

            return idList;

        }

    </script>
</body>
</html>



